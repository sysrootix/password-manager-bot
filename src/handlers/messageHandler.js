const sessionManager = require('../utils/sessionManager');
const db = require('../db/database');
const crypto = require('../utils/crypto');
const keyboards = require('../utils/keyboards');
const config = require('../../config/config');
const passwordGenerator = require('../utils/passwordGenerator');

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 * @param {Object} bot - –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
 * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
module.exports = async (bot, msg) => {
  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã, –æ–Ω–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ
  if (msg.text && msg.text.startsWith('/')) {
    return;
  }

  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const text = msg.text || '';

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  if (config.AUTHORIZED_USER_ID && userId.toString() !== config.AUTHORIZED_USER_ID) {
    await bot.sendMessage(
      chatId,
      '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É. –¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –±–æ—Ç.'
    );
    return;
  }

  try {
    const state = sessionManager.getState(userId);

    switch (state) {
      // –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      case sessionManager.STATES.AWAITING_CATEGORY:
        await handleCategoryInput(bot, msg, userId, text);
        break;

      // –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞
      case sessionManager.STATES.AWAITING_SERVICE:
        await handleServiceInput(bot, msg, userId, text);
        break;

      // –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞
      case sessionManager.STATES.AWAITING_LOGIN:
        await handleLoginInput(bot, msg, userId, text);
        break;

      // –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è –≤—Ä—É—á–Ω—É—é
      case sessionManager.STATES.AWAITING_PASSWORD:
        await handlePasswordInput(bot, msg, userId, text);
        break;

      // –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –¥–ª–∏–Ω—ã –ø–∞—Ä–æ–ª—è
      case sessionManager.STATES.AWAITING_PASSWORD_LENGTH:
        await handlePasswordLengthInput(bot, msg, userId, text);
        break;

      // –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ URL —Å–µ—Ä–≤–∏—Å–∞
      case sessionManager.STATES.AWAITING_URL:
        await handleUrlInput(bot, msg, userId, text);
        break;

      // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      case sessionManager.STATES.EDITING_CATEGORY:
        await handleEditCategory(bot, msg, userId, text);
        break;

      // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
      case sessionManager.STATES.EDITING_SERVICE:
        await handleEditService(bot, msg, userId, text);
        break;

      // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–Ω–∞
      case sessionManager.STATES.EDITING_LOGIN:
        await handleEditLogin(bot, msg, userId, text);
        break;

      // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è
      case sessionManager.STATES.EDITING_PASSWORD:
        await handleEditPassword(bot, msg, userId, text);
        break;

      // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ URL
      case sessionManager.STATES.EDITING_URL:
        await handleEditUrl(bot, msg, userId, text);
        break;

      // –î–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
      default:
        await bot.sendMessage(
          chatId,
          '–ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º.'
        );
        break;
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    await bot.sendMessage(
      chatId,
      '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞.'
    );
  }
};

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 * @param {Object} bot - –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
 * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
async function handleCategoryInput(bot, msg, userId, text) {
  const chatId = msg.chat.id;
  
  if (!text.trim()) {
    await bot.sendMessage(
      chatId,
      '‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:'
    );
    return;
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
  sessionManager.setPasswordData(userId, { category: text.trim() });
  sessionManager.setState(userId, sessionManager.STATES.AWAITING_SERVICE);
  
  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–≤–æ–¥—É —Å–µ—Ä–≤–∏—Å–∞
  await bot.sendMessage(
    chatId,
    'üìù *–®–∞–≥ 2/5:* –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: Gmail, VK, Steam)',
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üîô –û—Ç–º–µ–Ω–∞', callback_data: 'back_to_main' }]
        ]
      }
    }
  );
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å–µ—Ä–≤–∏—Å–∞
 * @param {Object} bot - –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
 * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
async function handleServiceInput(bot, msg, userId, text) {
  const chatId = msg.chat.id;
  
  if (!text.trim()) {
    await bot.sendMessage(
      chatId,
      '‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞:'
    );
    return;
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Ä–≤–∏—Å
  sessionManager.setPasswordData(userId, { service: text.trim() });
  sessionManager.setState(userId, sessionManager.STATES.AWAITING_LOGIN);
  
  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–≤–æ–¥—É –ª–æ–≥–∏–Ω–∞
  await bot.sendMessage(
    chatId,
    'üìù *–®–∞–≥ 3/5:* –í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏–ª–∏ email:',
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üîô –û—Ç–º–µ–Ω–∞', callback_data: 'back_to_main' }]
        ]
      }
    }
  );
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞
 * @param {Object} bot - –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
 * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
async function handleLoginInput(bot, msg, userId, text) {
  const chatId = msg.chat.id;
  
  if (!text.trim()) {
    await bot.sendMessage(
      chatId,
      '‚ùå –õ–æ–≥–∏–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω:'
    );
    return;
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–≥–∏–Ω
  sessionManager.setPasswordData(userId, { login: text.trim() });
  sessionManager.setState(userId, sessionManager.STATES.AWAITING_URL);
  
  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–≤–æ–¥—É URL
  await bot.sendMessage(
    chatId,
    'üìù *–®–∞–≥ 4/5:* –í–≤–µ–¥–∏—Ç–µ URL —Å–µ—Ä–≤–∏—Å–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):',
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: '‚è© –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', callback_data: 'skip_url' }],
          [{ text: 'üîô –û—Ç–º–µ–Ω–∞', callback_data: 'back_to_main' }]
        ]
      }
    }
  );
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ URL
 * @param {Object} bot - –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
 * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
async function handleUrlInput(bot, msg, userId, text) {
  const chatId = msg.chat.id;
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º URL (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º)
  sessionManager.setPasswordData(userId, { url: text.trim() });
  sessionManager.setState(userId, sessionManager.STATES.AWAITING_PASSWORD_CHOICE);
  
  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É —Å–ø–æ—Å–æ–±–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ä–æ–ª—è
  await bot.sendMessage(
    chatId,
    'üìù *–®–∞–≥ 5/5:* –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ä–æ–ª—è:',
    {
      parse_mode: 'Markdown',
      reply_markup: keyboards.passwordChoiceKeyboard()
    }
  );
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è –≤—Ä—É—á–Ω—É—é
 * @param {Object} bot - –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
 * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
async function handlePasswordInput(bot, msg, userId, text) {
  const chatId = msg.chat.id;
  
  if (!text.trim()) {
    await bot.sendMessage(
      chatId,
      '‚ùå –ü–∞—Ä–æ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:'
    );
    return;
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–æ–ª—å
  sessionManager.setPasswordData(userId, { password: text.trim() });
  sessionManager.setState(userId, sessionManager.STATES.CONFIRM_SAVE);
  
  // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  try {
    await bot.deleteMessage(chatId, msg.message_id);
  } catch (error) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º:', error);
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  const passwordData = sessionManager.getPasswordData(userId);
  
  const urlText = passwordData.url ? `\n*URL:* ${passwordData.url}` : '';
  await bot.sendMessage(
    chatId,
    `üìù *–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:*\n\n*–ö–∞—Ç–µ–≥–æ—Ä–∏—è:* ${passwordData.category}\n*–°–µ—Ä–≤–∏—Å:* ${passwordData.service}\n*–õ–æ–≥–∏–Ω:* ${passwordData.login}${urlText}\n*–ü–∞—Ä–æ–ª—å:* \`${passwordData.password}\`\n\n–í—Å—ë –≤–µ—Ä–Ω–æ?`,
    {
      parse_mode: 'Markdown',
      reply_markup: keyboards.saveKeyboard()
    }
  );
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 * @param {Object} bot - –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
 * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
async function handleEditCategory(bot, msg, userId, text) {
  const chatId = msg.chat.id;
  
  if (!text.trim()) {
    await bot.sendMessage(
      chatId,
      '‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:'
    );
    return;
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
  sessionManager.setPasswordData(userId, { category: text.trim() });
  sessionManager.setState(userId, sessionManager.STATES.CONFIRM_SAVE);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  const passwordData = sessionManager.getPasswordData(userId);
  
  const urlText = passwordData.url ? `\n*URL:* ${passwordData.url}` : '';
  await bot.sendMessage(
    chatId,
    `üìù *–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:*\n\n*–ö–∞—Ç–µ–≥–æ—Ä–∏—è:* ${passwordData.category}\n*–°–µ—Ä–≤–∏—Å:* ${passwordData.service}\n*–õ–æ–≥–∏–Ω:* ${passwordData.login}${urlText}\n*–ü–∞—Ä–æ–ª—å:* \`${passwordData.password}\`\n\n–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è?`,
    {
      parse_mode: 'Markdown',
      reply_markup: keyboards.saveKeyboard()
    }
  );
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞
 * @param {Object} bot - –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
 * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
async function handleEditService(bot, msg, userId, text) {
  const chatId = msg.chat.id;
  
  if (!text.trim()) {
    await bot.sendMessage(
      chatId,
      '‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞:'
    );
    return;
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å
  sessionManager.setPasswordData(userId, { service: text.trim() });
  sessionManager.setState(userId, sessionManager.STATES.CONFIRM_SAVE);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  const passwordData = sessionManager.getPasswordData(userId);
  
  const urlText = passwordData.url ? `\n*URL:* ${passwordData.url}` : '';
  await bot.sendMessage(
    chatId,
    `üìù *–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:*\n\n*–ö–∞—Ç–µ–≥–æ—Ä–∏—è:* ${passwordData.category}\n*–°–µ—Ä–≤–∏—Å:* ${passwordData.service}\n*–õ–æ–≥–∏–Ω:* ${passwordData.login}${urlText}\n*–ü–∞—Ä–æ–ª—å:* \`${passwordData.password}\`\n\n–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è?`,
    {
      parse_mode: 'Markdown',
      reply_markup: keyboards.saveKeyboard()
    }
  );
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏–Ω–∞
 * @param {Object} bot - –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
 * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
async function handleEditLogin(bot, msg, userId, text) {
  const chatId = msg.chat.id;
  
  if (!text.trim()) {
    await bot.sendMessage(
      chatId,
      '‚ùå –õ–æ–≥–∏–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω:'
    );
    return;
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π –ª–æ–≥–∏–Ω
  sessionManager.setPasswordData(userId, { login: text.trim() });
  sessionManager.setState(userId, sessionManager.STATES.CONFIRM_SAVE);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  const passwordData = sessionManager.getPasswordData(userId);
  
  const urlText = passwordData.url ? `\n*URL:* ${passwordData.url}` : '';
  await bot.sendMessage(
    chatId,
    `üìù *–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:*\n\n*–ö–∞—Ç–µ–≥–æ—Ä–∏—è:* ${passwordData.category}\n*–°–µ—Ä–≤–∏—Å:* ${passwordData.service}\n*–õ–æ–≥–∏–Ω:* ${passwordData.login}${urlText}\n*–ü–∞—Ä–æ–ª—å:* \`${passwordData.password}\`\n\n–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è?`,
    {
      parse_mode: 'Markdown',
      reply_markup: keyboards.saveKeyboard()
    }
  );
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è URL
 * @param {Object} bot - –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
 * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
async function handleEditUrl(bot, msg, userId, text) {
  const chatId = msg.chat.id;
  
  // URL –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º
  sessionManager.setPasswordData(userId, { url: text.trim() });
  sessionManager.setState(userId, sessionManager.STATES.CONFIRM_SAVE);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  const passwordData = sessionManager.getPasswordData(userId);
  
  const urlText = passwordData.url ? `\n*URL:* ${passwordData.url}` : '';
  await bot.sendMessage(
    chatId,
    `üìù *–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:*\n\n*–ö–∞—Ç–µ–≥–æ—Ä–∏—è:* ${passwordData.category}\n*–°–µ—Ä–≤–∏—Å:* ${passwordData.service}\n*–õ–æ–≥–∏–Ω:* ${passwordData.login}${urlText}\n*–ü–∞—Ä–æ–ª—å:* \`${passwordData.password}\`\n\n–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è?`,
    {
      parse_mode: 'Markdown',
      reply_markup: keyboards.saveKeyboard()
    }
  );
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª—è
 * @param {Object} bot - –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
 * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
async function handleEditPassword(bot, msg, userId, text) {
  const chatId = msg.chat.id;
  
  if (!text.trim()) {
    await bot.sendMessage(
      chatId,
      '‚ùå –ü–∞—Ä–æ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:'
    );
    return;
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
  sessionManager.setPasswordData(userId, { password: text.trim() });
  sessionManager.setState(userId, sessionManager.STATES.CONFIRM_SAVE);
  
  // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  try {
    await bot.deleteMessage(chatId, msg.message_id);
  } catch (error) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º:', error);
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  const passwordData = sessionManager.getPasswordData(userId);
  
  const urlText = passwordData.url ? `\n*URL:* ${passwordData.url}` : '';
  await bot.sendMessage(
    chatId,
    `üìù *–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:*\n\n*–ö–∞—Ç–µ–≥–æ—Ä–∏—è:* ${passwordData.category}\n*–°–µ—Ä–≤–∏—Å:* ${passwordData.service}\n*–õ–æ–≥–∏–Ω:* ${passwordData.login}${urlText}\n*–ü–∞—Ä–æ–ª—å:* \`${passwordData.password}\`\n\n–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è?`,
    {
      parse_mode: 'Markdown',
      reply_markup: keyboards.saveKeyboard()
    }
  );
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–ª–∏–Ω—ã –ø–∞—Ä–æ–ª—è
 * @param {Object} bot - –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
 * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
async function handlePasswordLengthInput(bot, msg, userId, text) {
  const chatId = msg.chat.id;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–≤–æ–¥ —á–∏—Å–ª–æ–º
  const length = parseInt(text.trim());
  
  if (isNaN(length) || length < 4 || length > 100) {
    await bot.sendMessage(
      chatId,
      '‚ùå –î–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º –æ—Ç 4 –¥–æ 100. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:',
      {
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üîü 10', callback_data: 'password_length_10' }],
            [{ text: '1Ô∏è‚É£2Ô∏è‚É£ 12', callback_data: 'password_length_12' }],
            [{ text: '1Ô∏è‚É£6Ô∏è‚É£ 16 (–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é)', callback_data: 'password_length_16' }],
            [{ text: '2Ô∏è‚É£0Ô∏è‚É£ 20', callback_data: 'password_length_20' }],
            [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'add_password' }]
          ]
        }
      }
    );
    return;
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –ø–∞—Ä–æ–ª—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
  const settings = sessionManager.getGeneratorSettings(userId);
  settings.length = length;
  sessionManager.setGeneratorSettings(userId, settings);
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–ª–∏–Ω–æ–π
  const password = passwordGenerator.generatePassword(settings);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–æ–ª—å –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  sessionManager.setPasswordData(userId, { password });
  sessionManager.setState(userId, sessionManager.STATES.CONFIRM_SAVE);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  const passwordData = sessionManager.getPasswordData(userId);
  
  const urlText = passwordData.url ? `\n*URL:* ${passwordData.url}` : '';
  await bot.sendMessage(
    chatId,
    `üìù *–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:*\n\n*–ö–∞—Ç–µ–≥–æ—Ä–∏—è:* ${passwordData.category}\n*–°–µ—Ä–≤–∏—Å:* ${passwordData.service}\n*–õ–æ–≥–∏–Ω:* ${passwordData.login}${urlText}\n*–ü–∞—Ä–æ–ª—å:* \`${passwordData.password}\`\n\n–í—Å—ë –≤–µ—Ä–Ω–æ?`,
    {
      parse_mode: 'Markdown',
      reply_markup: keyboards.saveKeyboard()
    }
  );
} 